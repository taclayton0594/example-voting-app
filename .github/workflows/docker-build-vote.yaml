---
name: Docker Workflow

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-image:
    name: Build Image
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write # needed to create and update comments in PRs
    
    steps:

      # For adding different run platforms
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # For Cacheing Docker Image Layers to Speed Up Subsequent Builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
            
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Trivy vulnerability scan
      # cans for vulnerabilities within the software packages, uncovers accidentally embedded secrets such as passwords, 
      # and analyzes license information associated with the included software
      - name: Run Trivy for all CVEs (non-blocking)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ github.run_id }}
          exit-code: 0
          format: table 

      # For Docker Metadata tagging and labels
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: tclayton0594/examplevotingapp_vote
          flavor: |
            latest=false
          tags: |
            type=raw,value=04
            type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
            type=ref,event=pr
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Docker build
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          
          ### path to where docker should copy files into image
          ### defaults to root of repository (.)
          context: "{{defaultContext}}:vote"

          # Use BuildKit building engine to cache layers of images while building to speed up future builds
          cache-from: type=gha
          cache-to: type=gha,mode=max

          # QEMU
          platforms: linux/amd64,linux/arm64,linux/arm/v7

       # If PR, put image tags in the PR comments
        # from https://github.com/marketplace/actions/create-or-update-comment
      - name: Find comment for image tags
        uses: peter-evans/find-comment@v3
        if: github.event_name == 'pull_request'
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Docker image tag(s) pushed
      
        # If PR, put image tags in the PR comments
      - name: Create or update comment for image tags
        uses: peter-evans/create-or-update-comment@v4
        if: github.event_name == 'pull_request'
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Docker image tag(s) pushed:
            ```text
            ${{ steps.docker_meta.outputs.tags }}
            ```

            Labels added to images:
            ```text
            ${{ steps.docker_meta.outputs.labels }}
            ```
          edit-mode: replace

      

          